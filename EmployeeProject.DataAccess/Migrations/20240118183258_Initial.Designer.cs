// <auto-generated />
using System;
using EmployeeProject.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeProject.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20240118183258_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("EmployeeProject.Buisiness.Models.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BossId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Salary")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BossId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("18fcf979-4804-4ca1-aeb2-3dbd355242d7"),
                            Adress = "Vilnius Mira st. 15",
                            BirthDate = new DateTime(1999, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmploymentDate = new DateTime(2019, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pilypas",
                            LastName = "Petrokas",
                            RoleId = 4,
                            Salary = 15000
                        },
                        new
                        {
                            Id = new Guid("26f8ebe2-0e5c-4aa3-8cde-bf58cf2afc68"),
                            Adress = "Vilnius Skila st. 25",
                            BirthDate = new DateTime(1986, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmploymentDate = new DateTime(2012, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vytis",
                            LastName = "Kreivaitis",
                            RoleId = 3,
                            Salary = 5000
                        },
                        new
                        {
                            Id = new Guid("d47cf8b6-1b6b-4e46-bbd7-59ca7fdaba14"),
                            Adress = "Vilnius Vernik st. 51",
                            BirthDate = new DateTime(1989, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmploymentDate = new DateTime(2013, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Salemonas",
                            LastName = "Bauzys",
                            RoleId = 3,
                            Salary = 5500
                        });
                });

            modelBuilder.Entity("EmployeeProject.Buisiness.Models.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Worker"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Regular Employee"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Boss"
                        },
                        new
                        {
                            Id = 4,
                            RoleName = "CEO"
                        });
                });

            modelBuilder.Entity("EmployeeProject.Buisiness.Models.Employees.Employee", b =>
                {
                    b.HasOne("EmployeeProject.Buisiness.Models.Employees.Employee", "Boss")
                        .WithMany()
                        .HasForeignKey("BossId");

                    b.HasOne("EmployeeProject.Buisiness.Models.Roles.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boss");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EmployeeProject.Buisiness.Models.Roles.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
